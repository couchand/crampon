# generated by crampon

class Factory
  build: (tag) ->
    switch tag.tag
      when 'CustomObject'
        Builder = CustomObject
      when 'actionOverrides'
        Builder = ActionOverride
      when 'fields'
        Builder = Field
      when 'listViews'
        Builder = ListView
      when 'nameField'
        Builder = NameField
      when 'picklist'
        Builder = Picklist
      when 'picklistValues'
        Builder = PicklistValue
      when 'summaryFilterItems'
        Builder = SummaryFilterItem
      when 'filters'
        Builder = Filter
      when 'sharedTo'
        Builder = SharedTo
      when 'namedFilters'
        Builder = NamedFilter
      when 'filterItems'
        Builder = FilterItem
      when 'recordTypes'
        Builder = RecordType
      when 'values'
        Builder = Value
      when 'validationRules'
        Builder = ValidationRule
      when 'webLinks'
        Builder = WebLink
      when 'searchLayouts'
        Builder = SearchLayout
      when 'businessProcesses'
        Builder = BusinessProcesse
      when 'fieldSets'
        Builder = FieldSet
      when 'displayedFields'
        Builder = DisplayedField
      else throw new Error "unknown tag type #{tag.tag}"

    thing = new Builder()
    tag.getchildren().forEach (child) ->
      thing.set child.tag, child.text, child
    thing

factory = new Factory()

class CustomObject
  constructor: ->
    @actionOverrides = {}
    @fields = {}
    @listViews = {}
  set: (field, value, tag) ->
    switch field
      when 'actionOverrides'
        thing = factory.build tag
        @actionOverrides[thing.actionName] = thing
      when 'deploymentStatus'
        @deploymentStatus = value
      when 'description'
        @description = value
      when 'enableActivities'
        @enableActivities = value is 'true'
      when 'enableEnhancedLookup'
        @enableEnhancedLookup = value is 'true'
      when 'enableFeeds'
        @enableFeeds = value is 'true'
      when 'enableHistory'
        @enableHistory = value is 'true'
      when 'enableReports'
        @enableReports = value is 'true'
      when 'fields'
        thing = factory.build tag
        @fields[thing.fullName] = thing
      when 'label'
        @label = value
      when 'listViews'
        thing = factory.build tag
        @listViews[thing.fullName] = thing
      when 'nameField'
        @nameField = value
      when 'pluralLabel'
        @pluralLabel = value
      when 'searchLayouts'
        @searchLayouts = value
      when 'sharingModel'
        @sharingModel = value
      else throw new Error "unknown field #{field} on CustomObject object"

class ActionOverride
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'actionName'
        @actionName = value
      when 'type'
        @type = value
      else throw new Error "unknown field #{field} on actionOverrides object"

class Field
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'deleteConstraint'
        @deleteConstraint = value
      when 'description'
        @description = value
      when 'externalId'
        @externalId = value is 'true'
      when 'label'
        @label = value
      when 'referenceTo'
        @referenceTo = value
      when 'relationshipName'
        @relationshipName = value
      when 'required'
        @required = value is 'true'
      when 'type'
        @type = value
      when 'formula'
        @formula = value
      when 'formulaTreatBlanksAs'
        @formulaTreatBlanksAs = value
      when 'unique'
        @unique = value is 'true'
      else throw new Error "unknown field #{field} on fields object"

class ListView
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'columns'
        @columns = value
      when 'filterScope'
        @filterScope = value
      when 'label'
        @label = value
      else throw new Error "unknown field #{field} on listViews object"

class NameField
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'label'
        @label = value
      when 'type'
        @type = value
      else throw new Error "unknown field #{field} on nameField object"

class Picklist
  constructor: ->
    @picklistValues = {}
  set: (field, value, tag) ->
    switch field
      when 'picklistValues'
        thing = factory.build tag
        @picklistValues[thing.fullName] = thing
      when 'sorted'
        @sorted = value is 'true'
      else throw new Error "unknown field #{field} on picklist object"

class PicklistValue
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'default'
        @default = value is 'true'
      else throw new Error "unknown field #{field} on picklistValues object"

class SummaryFilterItem
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'field'
        @field = value
      when 'operation'
        @operation = value
      when 'value'
        @value = value
      else throw new Error "unknown field #{field} on summaryFilterItems object"

class Filter
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'field'
        @field = value
      when 'operation'
        @operation = value
      when 'value'
        @value = value
      else throw new Error "unknown field #{field} on filters object"

class SharedTo
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'role'
        @role = value
      when 'roleAndSubordinates'
        @roleAndSubordinates = value
      when 'group'
        @group = value
      else throw new Error "unknown field #{field} on sharedTo object"

class NamedFilter
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'active'
        @active = value is 'true'
      when 'field'
        @field = value
      when 'filterItems'
        @filterItems = value
      when 'isOptional'
        @isOptional = value is 'true'
      when 'name'
        @name = value
      when 'sourceObject'
        @sourceObject = value
      when 'booleanFilter'
        @booleanFilter = value
      else throw new Error "unknown field #{field} on namedFilters object"

class FilterItem
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'field'
        @field = value
      when 'operation'
        @operation = value
      when 'value'
        @value = value
      else throw new Error "unknown field #{field} on filterItems object"

class RecordType
  constructor: ->
    @picklistValues = {}
  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'active'
        @active = value is 'true'
      when 'description'
        @description = value
      when 'label'
        @label = value
      when 'picklistValues'
        thing = factory.build tag
        @picklistValues[thing.fullName] = thing
      else throw new Error "unknown field #{field} on recordTypes object"

class Value
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'default'
        @default = value is 'true'
      else throw new Error "unknown field #{field} on values object"

class ValidationRule
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'active'
        @active = value is 'true'
      when 'description'
        @description = value
      when 'errorConditionFormula'
        @errorConditionFormula = value
      when 'errorDisplayField'
        @errorDisplayField = value
      when 'errorMessage'
        @errorMessage = value
      else throw new Error "unknown field #{field} on validationRules object"

class WebLink
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'availability'
        @availability = value
      when 'description'
        @description = value
      when 'displayType'
        @displayType = value
      when 'hasMenubar'
        @hasMenubar = value is 'true'
      when 'hasScrollbars'
        @hasScrollbars = value is 'true'
      when 'hasToolbar'
        @hasToolbar = value is 'true'
      when 'height'
        @height = parseInt value, 10
      when 'isResizable'
        @isResizable = value is 'true'
      when 'linkType'
        @linkType = value
      when 'masterLabel'
        @masterLabel = value
      when 'openType'
        @openType = value
      when 'position'
        @position = value
      when 'protected'
        @protected = value is 'true'
      when 'showsLocation'
        @showsLocation = value is 'true'
      when 'showsStatus'
        @showsStatus = value is 'true'
      when 'url'
        @url = value
      when 'width'
        @width = parseInt value, 10
      else throw new Error "unknown field #{field} on webLinks object"

class SearchLayout
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'customTabListAdditionalFields'
        @customTabListAdditionalFields = value
      when 'excludedStandardButtons'
        @excludedStandardButtons = value
      when 'lookupDialogsAdditionalFields'
        @lookupDialogsAdditionalFields = value
      when 'searchFilterFields'
        @searchFilterFields = value
      when 'searchResultsAdditionalFields'
        @searchResultsAdditionalFields = value
      else throw new Error "unknown field #{field} on searchLayouts object"

class BusinessProcesse
  constructor: ->
    @values = {}
  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'description'
        @description = value
      when 'isActive'
        @isActive = value is 'true'
      when 'values'
        thing = factory.build tag
        @values[thing.fullName] = thing
      else throw new Error "unknown field #{field} on businessProcesses object"

class FieldSet
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'description'
        @description = value
      when 'displayedFields'
        @displayedFields = value
      when 'label'
        @label = value
      else throw new Error "unknown field #{field} on fieldSets object"

class DisplayedField
  constructor: ->

  set: (field, value, tag) ->
    switch field
      when 'field'
        @field = value
      when 'isRequired'
        @isRequired = value is 'true'
      else throw new Error "unknown field #{field} on displayedFields object"

module.exports = factory
