# generated by crampon
# when a tag comes up with child nodes, decide which one
# to create to hold those children
class Factory
  build: (tag) ->
    switch tag.tag
# note the class names are the tag names, but
#  - capitalized
#  - trailing 's' removed
      when 'CustomLabels'
        Builder = CustomLabel
      when 'labels'
        Builder = Label
# shouldn't happen if our training set is large
      else throw new Error "unknown tag type #{tag.tag}"

    thing = new Builder()

    tag.getchildren().forEach (child) ->
      thing.set child.tag, child.text, child

# this is a particular special case...
    thing.finishBuild() if thing.finishBuild
    thing

factory = new Factory()
# each tag type that has child nodes has a class
# this is one top-level class
class CustomLabel
  constructor: ->
# maps of child elements by their name
# only elements that have themselves children
# (and thus are classes)
    @labels = {}

# primary method for filling up data
  set: (field, value, tag) ->
    switch field
      when 'labels'
        thing = factory.build tag
        @labels[thing.fullName] = thing
      else throw new Error "unknown field #{field} on CustomLabels object"

# each tag type that has child nodes has a class
# this is one top-level class
class Label
  constructor: ->
# maps of child elements by their name
# only elements that have themselves children
# (and thus are classes)


# primary method for filling up data
  set: (field, value, tag) ->
    switch field
      when 'fullName'
        @fullName = value
      when 'language'
        @language = value
      when 'protected'
        @protected = value is 'true'
      when 'shortDescription'
        @shortDescription = value
      when 'value'
        @value = value
      else throw new Error "unknown field #{field} on labels object"

module.exports = factory
